CREATE TABLE IF NOT EXISTS "films" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,
  "description" varchar,
  "release_date" date,
  "duration" bigint,
  "mpa_rating_id" int
);

CREATE TABLE IF NOT EXISTS "genres" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "genre" varchar
);

CREATE TABLE IF NOT EXISTS "film_genres" (
  "film_id" bigint,
  "genre_id" int
);

CREATE TABLE IF NOT EXISTS "mpa_ratings" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "mpa_rating" varchar
);

CREATE TABLE IF NOT EXISTS "likes" (
  "film_id" bigint,
  "user_id" bigint
);

CREATE TABLE IF NOT EXISTS "users" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar,
  "login" varchar,
  "name" varchar,
  "birthday" date
);

CREATE TABLE IF NOT EXISTS "friends" (
  "friend1_id" bigint,
  "friend2_id" bigint,
  "friendship_status" smallint
);

ALTER TABLE "films" ADD FOREIGN KEY ("mpa_rating_id") REFERENCES "mpa_ratings" ("id");

ALTER TABLE "film_genres" ADD FOREIGN KEY ("film_id") REFERENCES "films" ("id");

ALTER TABLE "film_genres" ADD FOREIGN KEY ("genre_id") REFERENCES "genres" ("id");

ALTER TABLE "likes" ADD FOREIGN KEY ("film_id") REFERENCES "films" ("id");

ALTER TABLE "likes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("friend1_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD FOREIGN KEY ("friend2_id") REFERENCES "users" ("id");
